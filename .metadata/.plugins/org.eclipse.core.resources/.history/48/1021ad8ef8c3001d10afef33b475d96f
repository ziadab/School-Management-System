package dao.evaluation;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;

import Domaine.evaluation.NoteControle;
import dao.database.Db;

public class NoteControleDAO {
    private Connection con;

    public NoteControleDAO() {
        this.con = Db.getInstance().con;
    }

    // insert a new record into notecontrole table
    public void addNoteControle(NoteControle noteControle) throws SQLException {
        String query = "INSERT INTO notecontrole (EtudiantUtilisateurID, ControleID) VALUES (?, ?) ON DUPLICATE KEY UPDATE Note=?, Valide=?, Observation=?";
        PreparedStatement statement = (PreparedStatement) con.prepareStatement(query);
        statement.setInt(1, noteControle.getEtudiant().getId());
        statement.setInt(2, noteControle.getControle().getId());
        statement.setFloat(3, noteControle.getNote());
        statement.setBoolean(4, noteControle.isValide());
        statement.setString(5, noteControle.getObservation());
        statement.executeUpdate();
    }

    //get all
    public ArrayList<NoteControle> getAll() throws SQLException {
        String query = "SELECT * FROM notecontrole";
        PreparedStatement statement = (PreparedStatement) con.prepareStatement(query);
        ResultSet resultSet = statement.executeQuery();
        ArrayList<NoteControle> noteControles = new ArrayList<>();
        while (resultSet.next()) {
            NoteControle noteControle = new NoteControle();
            noteControle.setId(resultSet.getInt("ID"));
            noteControle.getEtudiant().setId(resultSet.getInt("EtudiantUtilisateurID"));
            noteControle.setNote(resultSet.getFloat("Note"));
            noteControle.setValide(resultSet.getBoolean("Valide"));
            noteControle.setObservation(resultSet.getString("Observation"));
            noteControles.add(noteControle);
        }
        return noteControles;
    }

    //get by etudiant
    public ArrayList<NoteControle> getByEtudiant(int etudiantId) throws SQLException {
        String query = "SELECT * FROM notecontrole WHERE EtudiantUtilisateurID=?";
        PreparedStatement statement = (PreparedStatement) con.prepareStatement(query);
        statement.setInt(1, etudiantId);
        ResultSet resultSet = statement.executeQuery();
        ArrayList<NoteControle> noteControles = new ArrayList<>();
        while (resultSet.next()) {
            NoteControle noteControle = new NoteControle();
            noteControle.setId(resultSet.getInt("ID"));
            noteControle.getEtudiant().setId(resultSet.getInt("EtudiantUtilisateurID"));
            noteControle.setNote(resultSet.getFloat("Note"));
            noteControle.setValide(resultSet.getBoolean("Valide"));
            noteControle.setObservation(resultSet.getString("Observation"));
            noteControles.add(noteControle);
        }
        return noteControles;
    }

    //get by controle
    public ArrayList<NoteControle> getByControle(int controleId) throws SQLException {
        String query = "SELECT * FROM notecontrole WHERE ControleID=?";
        PreparedStatement statement = (PreparedStatement) con.prepareStatement(query);
        statement.setInt(1, controleId);
        ResultSet resultSet = statement.executeQuery();
        ArrayList<NoteControle> noteControles = new ArrayList<>();
        while (resultSet.next()) {
            NoteControle noteControle = new NoteControle();
            noteControle.setId(resultSet.getInt("ID"));
            noteControle.getEtudiant().setId(resultSet.getInt("EtudiantUtilisateurID"));
            noteControle.setNote(resultSet.getFloat("Note"));
            noteControle.setValide(resultSet.getBoolean("Valide"));
            noteControle.setObservation(resultSet.getString("Observation"));
            noteControles.add(noteControle);
        }
        return noteControles;
    }
}